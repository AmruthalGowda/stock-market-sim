{"version":3,"sources":["components/LiveGraph.jsx","components/HistoricalData.jsx","App.js","index.js"],"names":["STOCKS","STOCK_DETAILS","init_live_data","labels","datasets","label","data","fill","lineTension","backgroundColor","borderColor","LiveGraph","props","useState","curStock","setCurStock","liveData","setLiveData","useEffect","socket","io","on","console","log","id","emit","resp","newState","disconnect","Container","className","Row","Col","md","style","fontSize","fontFamily","textDecoration","DropdownButton","title","onSelect","eventKey","map","ele","idx","Dropdown","Item","href","HistoricalData","App","Navbar","bg","variant","expand","Brand","to","as","Link","Toggle","aria-controls","Collapse","Nav","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0UAMMA,EAAS,CAAC,OAAQ,OAAQ,KAAM,QAAS,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QAEjFC,EAAgB,CAClB,KAAQ,cACR,KAAQ,mBACR,GAAM,gBACN,MAAS,iBACT,KAAQ,oBACR,KAAQ,wBACR,KAAQ,eACR,KAAQ,qBACR,KAAQ,iBACR,KAAQ,aAINC,EAAiB,CACnBC,OAAQ,GACRC,SAAU,CACN,CACIC,MAAO,qBACPC,KAAM,GACNC,MAAM,EACNC,YAAa,EACbC,gBAAiB,iBACjBC,YAAa,2BAqEVC,EA/DG,SAACC,GAAW,IAAD,EACOC,mBAASb,EAAO,IADvB,mBAClBc,EADkB,KACRC,EADQ,OAEOF,mBAASX,GAFhB,mBAElBc,EAFkB,KAERC,EAFQ,KAmCzB,OA1BAC,qBAAU,WACN,IAAMC,EAASC,IAAG,uCAsBlB,OApBAD,EAAOE,GAAG,WAAW,WACjBC,QAAQC,IAAR,gCAAqCJ,EAAOK,GAA5C,MACAL,EAAOM,KAAK,UAAW,gBACxBA,KACC,gBAAiBX,GACnBO,GAAG,cAAc,SAACK,GAChB,IAAMC,EAAQ,2BACPX,GADO,IAEVb,OAAO,YAAKuB,EAAKvB,QACjBC,SAAS,YAAKY,EAASZ,YAE3BuB,EAASvB,SAAS,GAAGE,KAArB,YAAgCoB,EAAKpB,MACrCW,EAAYU,MAGhBR,EAAOE,GAAG,aAAa,WACnBF,EAAOM,KAAK,cACZH,QAAQC,IAAI,8BAGT,kBAAMJ,EAAOS,gBACrB,CAACd,IAGA,eAACe,EAAA,EAAD,CAAWC,UAAU,MAArB,UACI,eAACC,EAAA,EAAD,CAAKD,UAAU,sBAAf,UACI,cAACE,EAAA,EAAD,CAAKC,GAAI,EAAGH,UAAU,iBAAtB,SACI,sBAAMA,UAAU,kCAAkCI,MAAO,CACrDC,SAAU,OAAQC,WAAY,YAAaC,eAAgB,aAD/D,SAGKpC,EAAca,OAGvB,cAACkB,EAAA,EAAD,CAAKC,GAAI,EAAGH,UAAU,aAAtB,SACI,cAACQ,EAAA,EAAD,CAAgBd,GAAG,0BAA0Be,MAAOzB,EAAU0B,SA1C9C,SAACC,GAC7B1B,EAAY0B,IAyCA,SAEQzC,EAAO0C,KAAI,SAACC,EAAKC,GAAN,OACP,cAACC,EAAA,EAASC,KAAV,CAAyBL,SAAUE,EAAKI,KAAI,WAAMJ,GAAlD,SACKA,GADeC,aASxC,cAAC,OAAD,CAAMtC,KAAMU,QC3FlBhB,EAAS,CAAC,OAAQ,OAAQ,KAAM,QAAS,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QAEjFC,EAAgB,CAClB,KAAQ,cACR,KAAQ,mBACR,GAAM,gBACN,MAAS,iBACT,KAAQ,oBACR,KAAQ,wBACR,KAAQ,eACR,KAAQ,qBACR,KAAQ,iBACR,KAAQ,aAoCG+C,EAhCQ,SAACpC,GAAW,IAAD,EACEC,mBAASb,EAAO,IADlB,mBACvBc,EADuB,KACbC,EADa,KAO9B,OACI,cAACc,EAAA,EAAD,CAAWC,UAAU,MAArB,SACI,eAACC,EAAA,EAAD,CAAKD,UAAU,sBAAf,UACI,cAACE,EAAA,EAAD,CAAKC,GAAI,EAAGH,UAAU,iBAAtB,SACI,sBAAMA,UAAU,kCAAkCI,MAAO,CACrDC,SAAU,OAAQC,WAAY,YAAaC,eAAgB,aAD/D,SAGKpC,EAAca,OAGvB,cAACkB,EAAA,EAAD,CAAKC,GAAI,EAAGH,UAAU,aAAtB,SACI,cAACQ,EAAA,EAAD,CAAgBd,GAAG,0BAA0Be,MAAOzB,EAAU0B,SAf9C,SAACC,GAC7B1B,EAAY0B,IAcA,SAEQzC,EAAO0C,KAAI,SAACC,EAAKC,GAAN,OACP,cAACC,EAAA,EAASC,KAAV,CAAyBL,SAAUE,EAAKI,KAAI,WAAMJ,GAAlD,SACKA,GADeC,gBCLrCK,EA1BH,kBACR,eAAC,IAAD,WACI,eAACC,EAAA,EAAD,CAAQC,GAAG,OAAOC,QAAQ,OAAOC,OAAO,KAAKvB,UAAU,SAAvD,UACI,cAACoB,EAAA,EAAOI,MAAR,CAAcC,GAAG,IAAI/B,GAAG,aAAagC,GAAIC,IAAzC,yBACA,cAACP,EAAA,EAAOQ,OAAR,CAAeC,gBAAc,qBAC7B,cAACT,EAAA,EAAOU,SAAR,CAAiBpC,GAAG,mBAApB,SACI,eAACqC,EAAA,EAAD,CAAK/B,UAAU,UAAf,UACI,cAAC+B,EAAA,EAAIJ,KAAL,CAAUF,GAAG,IAAIC,GAAIC,IAArB,uBACA,cAACI,EAAA,EAAIJ,KAAL,CAAUF,GAAG,mBAAmBC,GAAIC,IAApC,qCAOZ,eAAC,IAAD,WACE,cAAC,IAAD,CAAOK,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,mBAAZ,SACE,cAAC,EAAD,aCvBZC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.dd49ada8.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Container, Row, Col, Dropdown, DropdownButton } from 'react-bootstrap';\nimport { Line } from 'react-chartjs-2';\nimport io from 'socket.io-client';\n\n\nconst STOCKS = [\"AAPL\", \"AMZN\", \"FB\", \"GOOGL\", \"INTC\", \"MSFT\", \"NFLX\", \"NVDA\", \"QCOM\", \"TSLA\"]\n\nconst STOCK_DETAILS = {\n    \"AAPL\": \"Apple, Inc.\",\n    \"AMZN\": \"Amazon.com, Inc.\",\n    \"FB\": \"Facebook, Inc\",\n    \"GOOGL\": \"Alphabet, Inc.\",\n    \"INTC\": \"Intel Corporation\",\n    \"MSFT\": \"Microsoft Corporation\",\n    \"NFLX\": \"Netflix Inc.\",\n    \"NVDA\": \"Nvidia Corporation\",\n    \"QCOM\": \"Qualcomm, Inc.\",\n    \"TSLA\": \"Tesla Inc\"\n};\n\n\nconst init_live_data = {\n    labels: [],\n    datasets: [\n        {\n            label: 'Stock Price in USD',\n            data: [],\n            fill: false,\n            lineTension: 0,\n            backgroundColor: 'rgb(255, 0, 0)',\n            borderColor: 'rgba(255, 0, 0, 0.25)',\n        },\n    ],\n}\n\n\nconst LiveGraph = (props) => {\n    const [curStock, setCurStock] = useState(STOCKS[0]);\n    const [liveData, setLiveData] = useState(init_live_data);\n\n    const handleStockSymbolChange = (eventKey) => {\n        setCurStock(eventKey);\n    };\n\n    // ComponentDidMount\n    useEffect(() => {\n        const socket = io('http://127.0.0.1:5000/api/socket.io');\n\n        socket.on('connect', () => {\n            console.log(`SocketIO: Connected! (${socket.id})`);\n            socket.emit('message', 'Connected');\n        }).emit(\n            'get_live_data', curStock\n        ).on('graph_data', (resp) => {\n            const newState = {\n                ...liveData,\n                labels: [...resp.labels],\n                datasets: [...liveData.datasets]\n            }\n            newState.datasets[0].data = [...resp.data];\n            setLiveData(newState);\n        });\n\n        socket.on('diconnect', () => {\n            socket.emit('disconnect');\n            console.log('SocketIO: Disconnected!');\n        });\n\n        return () => socket.disconnect();\n    }, [curStock]);\n\n    return (\n        <Container className=\"p-2\">\n            <Row className=\"align-items-end p-2\">\n                <Col md={9} className=\"align-self-end\">\n                    <span className=\"text-secondary font-weight-bold\" style={{\n                        fontSize: '24px', fontFamily: 'Monospace', textDecoration: 'underline'\n                    }}>\n                        {STOCK_DETAILS[curStock]}\n                    </span>\n                </Col>\n                <Col md={3} className=\"text-right\">\n                    <DropdownButton id=\"stock-symbol-select-btn\" title={curStock} onSelect={handleStockSymbolChange}>\n                        {\n                            STOCKS.map((ele, idx) => (\n                                <Dropdown.Item key={idx} eventKey={ele} href={`#${ele}`}>\n                                    {ele}\n                                </Dropdown.Item>\n                            ))\n                        }\n                    </DropdownButton>\n                </Col>\n            </Row>\n\n            <Line data={liveData} />\n        </Container>\n    );\n};\n\nexport default LiveGraph;\n","import React, { useEffect, useState } from 'react'\nimport { Container, Row, Col, Dropdown, DropdownButton } from 'react-bootstrap';\nimport { Line } from 'react-chartjs-2';\n\nconst STOCKS = [\"AAPL\", \"AMZN\", \"FB\", \"GOOGL\", \"INTC\", \"MSFT\", \"NFLX\", \"NVDA\", \"QCOM\", \"TSLA\"]\n\nconst STOCK_DETAILS = {\n    \"AAPL\": \"Apple, Inc.\",\n    \"AMZN\": \"Amazon.com, Inc.\",\n    \"FB\": \"Facebook, Inc\",\n    \"GOOGL\": \"Alphabet, Inc.\",\n    \"INTC\": \"Intel Corporation\",\n    \"MSFT\": \"Microsoft Corporation\",\n    \"NFLX\": \"Netflix Inc.\",\n    \"NVDA\": \"Nvidia Corporation\",\n    \"QCOM\": \"Qualcomm, Inc.\",\n    \"TSLA\": \"Tesla Inc\"\n};\n\n\nconst HistoricalData = (props) => {\n    const [curStock, setCurStock] = useState(STOCKS[0]);\n\n    const handleStockSymbolChange = (eventKey) => {\n        setCurStock(eventKey);\n    };\n\n    return (\n        <Container className=\"p-2\">\n            <Row className=\"align-items-end p-2\">\n                <Col md={9} className=\"align-self-end\">\n                    <span className=\"text-secondary font-weight-bold\" style={{\n                        fontSize: '24px', fontFamily: 'Monospace', textDecoration: 'underline'\n                    }}>\n                        {STOCK_DETAILS[curStock]}\n                    </span>\n                </Col>\n                <Col md={3} className=\"text-right\">\n                    <DropdownButton id=\"stock-symbol-select-btn\" title={curStock} onSelect={handleStockSymbolChange}>\n                        {\n                            STOCKS.map((ele, idx) => (\n                                <Dropdown.Item key={idx} eventKey={ele} href={`#${ele}`}>\n                                    {ele}\n                                </Dropdown.Item>\n                            ))\n                        }\n                    </DropdownButton>\n                </Col>\n            </Row>\n        </Container>);\n};\n\nexport default HistoricalData;\n","import { Navbar, Nav } from 'react-bootstrap';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route, Link\n} from \"react-router-dom\";\nimport LiveGraph from './components/LiveGraph';\nimport HistoricalData from './components/HistoricalData';\n\n\nconst App = () => (\n    <Router>\n        <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" className=\"shadow\">\n            <Navbar.Brand to=\"/\" id=\"#live_data\" as={Link}>StockStream</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav className=\"mr-auto\">\n                    <Nav.Link to=\"/\" as={Link}>Live Data</Nav.Link>\n                    <Nav.Link to=\"/historical_data\" as={Link}>Historical Data</Nav.Link>\n                </Nav>\n            </Navbar.Collapse>\n        </Navbar>\n\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n          <Route exact path=\"/\">\n            <LiveGraph />\n          </Route>\n          <Route path=\"/historical_data\">\n            <HistoricalData />\n          </Route>\n        </Switch>\n    </Router>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}